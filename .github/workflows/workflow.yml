on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Build with dotnet
      run: dotnet build --configuration Release
      
    - name: Install xml Parser
      run: npm install dom-parser

    - name: Unit Tests
      run: dotnet test -l:trx --collect:"XPlat Code Coverage"
    
    - name: Update solution
      if: always()
      uses: actions/github-script@v6
      with:
        result-encoding: string
        script: |
          const fs = require('fs')
          const DomParser = require('dom-parser')
          var parser = new DomParser()
          const assertionResults = []
          const parentDir = 'test/CsharpBasicSkeleton.Tests/TestResults/'
          fs.readdirSync(parentDir).forEach((fileName) => {
              const filePath = parentDir + fileName
              if (fs.lstatSync(filePath).isDirectory()) {
                  return
              }
              const file = fs.readFileSync(filePath)
              var fileString = file.toString()
              fileString = fileString.replaceAll("UnitTestResult", "unittestresult") //Crashed with caps
              const dom = parser.parseFromString(fileString)
              dom.getElementsByTagName("unittestresult").forEach((testcase) => {
                  testName = testcase.getAttribute("testName")
                  testResult = testcase.getAttribute("outcome")
                  assertionResults.push(testResult === "Passed")
              })
          })
          console.log(assertionResults)
      
      
    - name: SonarQube Scan
      if: always()
      uses: sonarsource/sonarqube-scan-action@master
      with:
        args: >
          -Dsonar.projectKey=${{ github.event.repository.name }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        PROJECT_ID: ${{ github.event.repository.name }}
  
  